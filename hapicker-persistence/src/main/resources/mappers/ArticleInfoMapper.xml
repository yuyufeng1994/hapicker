<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hapicker.mapper.ArticleInfoMapper">

    <resultMap id="BaseResultMap" type="com.hapicker.model.ArticleInfo">
        <id column="article_id" property="articleId" jdbcType="INTEGER"/>
        <result column="article_title" property="articleTitle" jdbcType="VARCHAR"/>
        <result column="article_brief" property="articleBrief" jdbcType="VARCHAR"/>
        <result column="article_source" property="articleSource" jdbcType="VARCHAR"/>
        <result column="article_type" property="articleType" jdbcType="VARCHAR"/>
        <result column="article_status" property="articleStatus" jdbcType="INTEGER"/>
        <result column="article_cover" property="articleCover" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <resultMap id="ResultMapWithBLOBs" type="com.hapicker.model.ArticleInfo">
        <id column="article_id" property="articleId" jdbcType="INTEGER"/>
        <result column="article_title" property="articleTitle" jdbcType="VARCHAR"/>
        <result column="article_brief" property="articleBrief" jdbcType="VARCHAR"/>
        <result column="article_source" property="articleSource" jdbcType="VARCHAR"/>
        <result column="article_type" property="articleType" jdbcType="VARCHAR"/>
        <result column="article_status" property="articleStatus" jdbcType="INTEGER"/>
        <result column="article_cover" property="articleCover" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="article_content" property="articleContent" jdbcType="LONGVARCHAR"/>
    </resultMap>


    <resultMap id="ResultMapWithCategorys" type="com.hapicker.common.dto.ArticleInfoDTO">
        <id column="article_id" property="articleId" jdbcType="INTEGER"/>
        <result column="article_title" property="articleTitle" jdbcType="VARCHAR"/>
        <result column="article_brief" property="articleBrief" jdbcType="VARCHAR"/>
        <result column="article_source" property="articleSource" jdbcType="VARCHAR"/>
        <result column="article_type" property="articleType" jdbcType="VARCHAR"/>
        <result column="article_status" property="articleStatus" jdbcType="INTEGER"/>
        <result column="article_cover" property="articleCover" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="article_content" property="articleContent" jdbcType="LONGVARCHAR"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="user_nick" property="userNick" jdbcType="VARCHAR"/>
        <result column="user_avatar" property="userAvatar" jdbcType="VARCHAR"/>
        <result column="user_profile" property="userProfile" jdbcType="VARCHAR"/>
        <collection property="categorys" column="article_id"
                    select="com.hapicker.mapper.CategoryInfoMapper.listCategoryInfoByArticleId"/>
    </resultMap>

    <resultMap id="ResultMapWithUser" type="com.hapicker.common.dto.ArticleInfoDTO">
        <id column="article_id" property="articleId" jdbcType="INTEGER"/>
        <result column="article_title" property="articleTitle" jdbcType="VARCHAR"/>
        <result column="article_brief" property="articleBrief" jdbcType="VARCHAR"/>
        <result column="article_source" property="articleSource" jdbcType="VARCHAR"/>
        <result column="article_type" property="articleType" jdbcType="VARCHAR"/>
        <result column="article_status" property="articleStatus" jdbcType="INTEGER"/>
        <result column="article_cover" property="articleCover" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="article_content" property="articleContent" jdbcType="LONGVARCHAR"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="user_nick" property="userNick" jdbcType="VARCHAR"/>
        <result column="user_avatar" property="userAvatar" jdbcType="VARCHAR"/>
        <result column="user_profile" property="userProfile" jdbcType="VARCHAR"/>
    </resultMap>


    <sql id="Base_Column_List">
        <!--
          WARNING - @mbg.generated
        -->
        article_id, article_title, article_brief, article_source, article_type, article_status,
        user_id, create_time, update_time
    </sql>
    <sql id="Blob_Column_List">
        <!--
          WARNING - @mbg.generated
        -->
        article_content
    </sql>

    <select id="getArticleInfoById" parameterType="java.lang.Integer" resultMap="ResultMapWithCategorys">
     SELECT
      ai.article_id,
      ai.article_title,
      ai.article_brief,
      ai.article_source,
      ai.article_type,
      ai.article_cover,
      ai.article_status,
      ai.user_id,
      ai.article_content,
      ai.create_time,
      ai.update_time,
      ui.user_nick,
      ui.user_name,
      ui.user_avatar,
      ui.user_profile
  FROM
      article_info ai
  LEFT JOIN user_info ui ON ai.user_id = ui.user_id
  WHERE ai.article_id = #{articleId,jdbcType=INTEGER}
  </select>
    <select id="selectList" parameterType="com.hapicker.model.ArticleInfo" resultMap="ResultMapWithUser">
     SELECT
          ai.article_id,
          ai.article_title,
          ai.article_brief,
          ai.article_source,
          ai.article_type,
          ai.article_cover,
          ai.article_status,
          ai.user_id,
          ai.article_content,
          ai.create_time,
          ai.update_time,
          ui.user_nick,
          ui.user_name,
          ui.user_avatar,
          ui.user_profile
      FROM
          article_info ai
      LEFT JOIN user_info ui ON ai.user_id = ui.user_id
      WHERE 1=1
        <if test="articleType != null">
            AND ai.article_type = #{articleType,jdbcType=VARCHAR}
        </if>
        <if test="articleStatus != null">
            AND article_status = #{articleStatus,jdbcType=INTEGER}
        </if>

    </select>
</mapper>