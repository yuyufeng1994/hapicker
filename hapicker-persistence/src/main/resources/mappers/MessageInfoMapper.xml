<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hapicker.mapper.MessageInfoMapper">
    <resultMap id="BaseResultMap" type="com.hapicker.model.MessageInfo">
        <!--
          WARNING - @mbg.generated
        -->
        <constructor>
            <idArg column="message_id" javaType="java.lang.Long" jdbcType="BIGINT"/>
            <arg column="message_from" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="message_to" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="message_title" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="message_content" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="message_type" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="is_read" javaType="java.lang.Boolean" jdbcType="BIT"/>
            <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        </constructor>
    </resultMap>

    <sql id="Base_Column_List">
        <!--
          WARNING - @mbg.generated
        -->
        message_id, message_from, message_to, message_title, message_content, message_type,
        is_read, create_time, update_time
    </sql>

    <select id="selectById" resultType="com.hapicker.common.dto.MessageInfoDTO">
        SELECT
            message_id,
            message_from,
            (
                SELECT
                    user_nick
                FROM
                    user_info
                WHERE
                    user_id = message_info.message_from
            ) AS message_from_name,
            message_to,
            (
                SELECT
                    user_nick
                FROM
                    user_info
                WHERE
                    user_id = message_info.message_to
            ) AS message_to_name,
            message_title,
            message_content,
            message_type,
            is_read,
            create_time,
            update_time
            FROM
            message_info where message_id = #{messageId,jdbcType=BIGINT}
    </select>

    <select id="selectList" resultType="com.hapicker.common.dto.MessageInfoDTO">
        SELECT
            message_id,
            message_from,
            (
                SELECT
                    user_nick
                FROM
                    user_info
                WHERE
                    user_id = message_info.message_from
            ) AS message_from_name,
            message_to,
            (
                SELECT
                    user_nick
                FROM
                    user_info
                WHERE
                    user_id = message_info.message_to
            ) AS message_to_name,
            message_title,
            message_content,
            message_type,
            is_read,
            create_time,
            update_time
        FROM
            message_info
    </select>
</mapper>